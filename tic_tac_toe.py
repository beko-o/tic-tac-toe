#!/usr/bin/env python3
"""
Tic Tac Toe GUI Game
–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –∏–≥—Ä—ã –ö—Ä–µ—Å—Ç–∏–∫–∏-–ù–æ–ª–∏–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º tkinter
"""

import tkinter as tk
from tkinter import messagebox, font


class TicTacToeGUI:
    def __init__(self):
        self.root = tk.Tk()
        self.root.title("–ö—Ä–µ—Å—Ç–∏–∫–∏-–ù–æ–ª–∏–∫–∏")
        self.root.geometry("400x500")
        self.root.resizable(False, False)
        
        # –ò–≥—Ä–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        self.current_player = 'X'
        self.board = ['' for _ in range(9)]
        self.buttons = []
        
        # –°—á–µ—Ç—á–∏–∫ –ø–æ–±–µ–¥
        self.score_x = 0
        self.score_o = 0
        
        self.setup_ui()
        
    def setup_ui(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_font = font.Font(family="Arial", size=20, weight="bold")
        title_label = tk.Label(
            self.root, 
            text="–ö—Ä–µ—Å—Ç–∏–∫–∏-–ù–æ–ª–∏–∫–∏", 
            font=title_font,
            fg="#2c3e50",
            pady=10
        )
        title_label.pack()
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –∏–≥—Ä–æ–∫–µ
        self.player_info = tk.Label(
            self.root,
            text=f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞: {self.current_player}",
            font=("Arial", 14),
            fg="#e74c3c"
        )
        self.player_info.pack(pady=5)
        
        # –°—á–µ—Ç—á–∏–∫ –æ—á–∫–æ–≤
        self.score_frame = tk.Frame(self.root)
        self.score_frame.pack(pady=5)
        
        self.score_label = tk.Label(
            self.score_frame,
            text=f"X: {self.score_x}  |  O: {self.score_o}",
            font=("Arial", 12),
            fg="#34495e"
        )
        self.score_label.pack()
        
        # –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ
        self.game_frame = tk.Frame(self.root, bg="#34495e", padx=10, pady=10)
        self.game_frame.pack(pady=20)
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è
        button_font = font.Font(family="Arial", size=24, weight="bold")
        
        for i in range(9):
            row = i // 3
            col = i % 3
            
            button = tk.Button(
                self.game_frame,
                text="",
                font=button_font,
                width=4,
                height=2,
                bg="#ecf0f1",
                fg="#2c3e50",
                relief="raised",
                bd=3,
                command=lambda idx=i: self.make_move(idx)
            )
            button.grid(row=row, column=col, padx=2, pady=2)
            self.buttons.append(button)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.control_frame = tk.Frame(self.root)
        self.control_frame.pack(pady=20)
        
        # –ö–Ω–æ–ø–∫–∞ –Ω–æ–≤–æ–π –∏–≥—Ä—ã
        new_game_btn = tk.Button(
            self.control_frame,
            text="–ù–æ–≤–∞—è –∏–≥—Ä–∞",
            font=("Arial", 12),
            bg="#3498db",
            fg="white",
            padx=20,
            pady=5,
            command=self.new_game
        )
        new_game_btn.grid(row=0, column=0, padx=10)
        
        # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ —Å—á–µ—Ç–∞
        reset_score_btn = tk.Button(
            self.control_frame,
            text="–°–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç",
            font=("Arial", 12),
            bg="#e67e22",
            fg="white",
            padx=20,
            pady=5,
            command=self.reset_score
        )
        reset_score_btn.grid(row=0, column=1, padx=10)
        
        # –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞
        quit_btn = tk.Button(
            self.control_frame,
            text="–í—ã—Ö–æ–¥",
            font=("Arial", 12),
            bg="#e74c3c",
            fg="white",
            padx=20,
            pady=5,
            command=self.root.quit
        )
        quit_btn.grid(row=0, column=2, padx=10)
    
    def make_move(self, position):
        """–°–æ–≤–µ—Ä—à–∏—Ç—å —Ö–æ–¥"""
        if self.board[position] == '':
            # –î–µ–ª–∞–µ–º —Ö–æ–¥
            self.board[position] = self.current_player
            self.buttons[position].config(
                text=self.current_player,
                state="disabled",
                bg="#bdc3c7" if self.current_player == 'X' else "#f39c12",
                fg="white"
            )
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–±–µ–¥—É
            if self.check_winner():
                self.handle_win()
                return
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∏—á—å—é
            if self.is_board_full():
                self.handle_tie()
                return
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∏–≥—Ä–æ–∫–∞
            self.switch_player()
    
    def check_winner(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø–æ–±–µ–¥—É"""
        # –í—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
        win_patterns = [
            [0, 1, 2], [3, 4, 5], [6, 7, 8],  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏
            [0, 3, 6], [1, 4, 7], [2, 5, 8],  # –í–µ—Ä—Ç–∏–∫–∞–ª–∏
            [0, 4, 8], [2, 4, 6]              # –î–∏–∞–≥–æ–Ω–∞–ª–∏
        ]
        
        for pattern in win_patterns:
            if (self.board[pattern[0]] == self.board[pattern[1]] == 
                self.board[pattern[2]] != ''):
                # –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º –≤—ã–∏–≥—Ä—ã—à–Ω—É—é –∫–æ–º–±–∏–Ω–∞—Ü–∏—é
                for pos in pattern:
                    self.buttons[pos].config(bg="#27ae60")
                return True
        return False
    
    def is_board_full(self):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –¥–æ—Å–∫–∏"""
        return '' not in self.board
    
    def switch_player(self):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞"""
        self.current_player = 'O' if self.current_player == 'X' else 'X'
        color = "#e74c3c" if self.current_player == 'X' else "#f39c12"
        self.player_info.config(
            text=f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞: {self.current_player}",
            fg=color
        )
    
    def handle_win(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–±–µ–¥—ã"""
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç
        if self.current_player == 'X':
            self.score_x += 1
        else:
            self.score_o += 1
        
        self.update_score_display()
        
        # –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏
        for button in self.buttons:
            button.config(state="disabled")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–±–µ–¥–µ
        messagebox.showinfo(
            "–ü–æ–±–µ–¥–∞!", 
            f"üéâ –ò–≥—Ä–æ–∫ {self.current_player} –ø–æ–±–µ–¥–∏–ª! üéâ"
        )
        
        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –Ω–æ–≤—É—é –∏–≥—Ä—É
        if messagebox.askyesno("–ù–æ–≤–∞—è –∏–≥—Ä–∞", "–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?"):
            self.new_game()
    
    def handle_tie(self):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∏—á—å–µ–π"""
        messagebox.showinfo("–ù–∏—á—å—è!", "ü§ù –ù–∏—á—å—è! –•–æ—Ä–æ—à–∞—è –∏–≥—Ä–∞! ü§ù")
        
        if messagebox.askyesno("–ù–æ–≤–∞—è –∏–≥—Ä–∞", "–•–æ—Ç–∏—Ç–µ —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑?"):
            self.new_game()
    
    def new_game(self):
        """–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É"""
        self.board = ['' for _ in range(9)]
        self.current_player = 'X'
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏
        for button in self.buttons:
            button.config(
                text="",
                state="normal",
                bg="#ecf0f1",
                fg="#2c3e50"
            )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∏–≥—Ä–æ–∫–µ
        self.player_info.config(
            text=f"–•–æ–¥ –∏–≥—Ä–æ–∫–∞: {self.current_player}",
            fg="#e74c3c"
        )
    
    def reset_score(self):
        """–°–±—Ä–æ—Å —Å—á–µ—Ç–∞"""
        if messagebox.askyesno("–°–±—Ä–æ—Å —Å—á–µ—Ç–∞", "–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å —Å—á–µ—Ç?"):
            self.score_x = 0
            self.score_o = 0
            self.update_score_display()
    
    def update_score_display(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—á–µ—Ç–∞"""
        self.score_label.config(text=f"X: {self.score_x}  |  O: {self.score_o}")
    
    def run(self):
        """–ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã"""
        self.root.mainloop()


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    game = TicTacToeGUI()
    game.run()


if __name__ == "__main__":
    main()